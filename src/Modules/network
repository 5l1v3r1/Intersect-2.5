
'''
@description: collects network information such as listening ports, DNS info, active connections, firewall rules, etc
@author: ohdae [bindshell@live.com]
'''

def get_network():
    import urllib2

    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("google.com",80))
        localIP = (s.getsockname()[0])
        s.close()
        splitIP = localIP.split('.')
        splitIP[3:] = (['0/24'])
        IPRange = ".".join(splitIP)
        externalIP = urllib2.urlopen("http://myip.ozymo.com/").read()
        status_msg("External IP Address: %s\n" % externalIP)
        status_msg("Internal IP Address: %s\n" % localIP)
        status_msg("Internal IP Range: %s\n" % IPRange)
    except:
        status_msg("Unable to gather IP address information")

    status_msg("Hostname: ")
    cmd_exec("hostname -f")

    cmd_save("netstat --tcp --listening", "netstat.txt")

    if currentuser == "root" and whereis('iptables') is not None:
        cmd_save("iptables -L -n", "iptables_raw.txt") 
        cmd_save("iptables-save", "iptables_rules.txt")
    else:
        pass

    cmd_save("ifconfig -a", "ifconfig.txt")

    network = [ "/etc/hosts.deny", "/etc/hosts.allow", "/etc/inetd.conf", "/etc/host.conf", "/etc/resolv.conf" ]
    for x in network:
        save_file(x)


get_network()

