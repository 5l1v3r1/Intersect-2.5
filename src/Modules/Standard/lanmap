
# Enumerates live hosts running on the internal network. Captures internal and external IP address. Perform LAN network mapping.
def lanmap():
    # Combine ARP then portscan. Send IPs to list and iterate through for the scan
    # Add service identification via socket for all open ports
    # Add traceroute after finding live hosts. Send all results to graph report.
   
    print("[+] Searching for live hosts...")
    os.mkdir(Temp_Dir+"/hosts")
    os.chdir(Temp_Dir+"/hosts")

    try:
        #TODO:Consider scanning all non-loopback addresses for multi-homed machines
        localIP = [x[4] for x in scapy.all.conf.route.routes if x[2] != '0.0.0.0'][0]
    except OSError:
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("google.com",80))
        localIP = (s.getsockname()[0])
        s.close()
    else:
        pass
    #Get the integer representation of the local IP address
    ipBin = reduce(lambda x, y: (int(x) << 8)+int(y), localIP.split('.'))
    #route = [ network_addr, netmask, gateway, interface, address ]
    for route in scapy.all.conf.route.routes:
        if (route[4] == localIP #If it's the address we're talking to
            and route[0] != 0 #and it's not the route to the gateway itself
            and route[0] == (route[1] & ipBin)): #And localIP is in this subnet (fixes 169.254/16 oddness)
                #Calculate the CIDR from the base-2 logarithm of the netmask
                IPRange = '/'.join((localIP, str(int(32-log(0xffffffff-route[1]+1,2)))))
    
    conf.verb=0
    ans,unans=srp(Ether(dst="ff:ff:ff:ff:ff:ff")/ARP(pdst=IPRange),timeout=2)
    file = open("livehosts.txt", "a")
    file.write("LAN IP Range: " + IPRange +"\n")
    for snd,rcv in ans:
        mac_address=rcv.sprintf("%Ether.src%")
        ip_address=rcv.sprintf("%ARP.psrc%")
        #print rcv.sprintf("\n\n[+] Live Host\nMAC %Ether.src%\nIP: %ARP.psrc%\n ")
        file.write("\n[+] Live Host\nIP: "+ip_address + " MAC"+ mac_address + "\n")
    file.write("\n")
    file.close

    externalIP = ip = urllib2.urlopen("http://myip.ozymo.com/").read()
    file = open("external.txt", "a")
    file.write("External IP Address: " + externalIP +"\n")
    file.write("Internal IP Address: " + localIP +"\n")
    file.write("Internal IP Range: " + IPRange +"\n")
    file.close
    
 
