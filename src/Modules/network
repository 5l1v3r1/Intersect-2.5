

'''
@description: collects network information such as listening ports, DNS info, active connections, firewall rules, etc
@author: ohdae [bindshell@live.com]
'''
 
status_msg("IP Address: ")
if distro == "ubuntu" or distro2 == "Ubuntu" is True:
    cmd_exec("hostname -I")
else:
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s.connect(("google.com",80))
    localIP = (s.getsockname()[0])
    s.close()
    splitIP = localIP.split('.')
    splitIP[3:] = (['0/24'])
    IPRange = ".".join(splitIP)
    externalIP = urllib2.urlopen("http://myip.ozymo.com/").read()
    status_msg("External IP Address: %s\n" % externalIP)
    status_msg("Internal IP Address: %s\n" % localIP)
    status_msg("Internal IP Range: %s\n" % IPRange)

status_msg("Hostname: ")
cmd_exec("hostname -f")

cmd2txt("netstat --tcp --listening", "netstat.txt")

if currentuser == "root" and whereis('iptables') is not None:
    cmd2txt("iptables -L -n", "iptables_raw.txt") 
    cmd2txt("iptables-save", "iptables_rules.txt")
else:
    pass

cmd2txt("ifconfig -a", "ifconfig.txt")

network = [ "/etc/hosts.deny", "/etc/hosts.allow", "/etc/inetd.conf", "/etc/host.conf", "/etc/resolv.conf" ]
for x in network:
    save_file(x)


